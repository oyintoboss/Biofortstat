@model BioFortStat.ViewModel.ProductViewModel

@{
    ViewBag.Title = "UserProduct";
    Layout = "~/Views/Shared/StaffLayout.cshtml";
}

<h2>UserProduct</h2>


@using (Html.BeginForm("SaveProduct", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Productz.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Productz.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Productz.ProductName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Productz.ProductPrice, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Productz.ProductPrice, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Productz.ProductPrice, "", new { @class = "text-danger" })
                </div>
            </div>

           
            </div>

        <div class="row">
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Productz.ProductQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
                    
                        @Html.EditorFor(model => model.Productz.ProductQuantity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Productz.ProductQuantity, "", new { @class = "text-danger" })
                 </div>   
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                   @Html.LabelFor(model => model.Productz.State, htmlAttributes: new { @class = "control-label col-md-2" })
               
                    @Html.DropDownListFor(m => m.Productz.State, new SelectList(Model.Statez, "StateName", "StateName"), "-- Select State --", new { @class = "form-control", @placeholder = "Enter State" })
                    @Html.ValidationMessageFor(m => m.Productz.State)
                    
                
                </div>
            </div>


        </div>            
        <div class="row">
        <div class="col-sm-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Productz.ProductUnit, htmlAttributes: new { @class = "control-label col-md-2" })

                @Html.DropDownListFor(m => m.Productz.ProductUnit, new SelectList(Model.Unitz, "UnitName", "UnitName"), "-- Select ProductUnit --", new { @class = "form-control", @placeholder = "Enter ProductUnit" })
                @Html.ValidationMessageFor(m => m.Productz.ProductUnit)
               
            </div>
        </div>
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Productz.LGA, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Productz.LGA, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Productz.LGA, "", new { @class = "text-danger" })
                </div>
            </div>
            </div>

        <div class="col-sm-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Productz.ProductPicture, htmlAttributes: new { @class = "control-label col-md-2" })

                <input type="file" name="product" />
                @Html.ValidationMessageFor(model => model.Productz.ProductPicture, "", new { @class = "text-danger" })
            </div>
        </div>
       

        <div style="text-align:center">
            <button class="btn btn-primary">Submit</button>
        </div>
        </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
